// ------------------------
// contains resets, variables, mixins, and any utility classes.
// ------------------------

$primary   : #181c32;
$secondary : #e8e8ee;
$dark-blue : #3d405b;
$bg-color  : #fbf9f6;
$white     : #fff;

$grey: #ecedf3;

$red    : #e73763;
$green  : #16d887;
$orange : #ecab14;
$yellow : #f2f60d;
$blue   : #00b7ff;

$theme-colors: ();
$theme-colors: map-merge(("primary": $primary,
    "secondary": $secondary,
    "success": $green,
    "info" : $blue,
    "warning": $yellow,
    "danger" : $red,
  ),
  $theme-colors);

$btn-disabled-opacity: .65;

$transition-m: all 0.15s ease;

$shadow-sm : rgba(0, 0, 0, 0.25) 0px 20px 25px -5px,
rgba(0, 0, 0, 0.1) 0px 10px 10px -5px;
$shadow-md : rgba(93, 60, 109, 0.082) 0 1px 10px 0;
$shadow-lg : rgba(82, 63, 105, 0.078) 0 5px 30px 0;
$shadow-xl : rgba(82, 63, 105, 0.116) 0 7px 50px 0;

$zindex-dropdown      : 10 !default;
$zindex-sticky        : 20 !default;
$zindex-fixed         : 30 !default;
$zindex-modal-backdrop: 40 !default;
$zindex-modal         : 50 !default;
$zindex-popover       : 60 !default;
$zindex-tooltip       : 70 !default;

$border-radius-sm: .2rem !default;
$border-radius   : .4rem !default;
$border-radius-lg: .65rem !default;

$breakpoints: ("small": "576px", "medium": "768px", "large" : "992px", "xlarge": "1200px");

$font-size-base: 1rem;
$view-width    : .15vw;

// The yiq lightness value that determines when the lightness of color changes from "dark" to "light". Acceptable values are between 0 and 255.
$yiq-contrasted-threshold: 150 !default;

// Customize the light and dark text colors for use in our YIQ color contrast function.
$yiq-text-dark : $primary !default;
$yiq-text-light: $white !default;

// Font weights
$font-weight-lighter: lighter !default;
$font-weight-light  : 300 !default;
$font-weight-normal : 400 !default;
$font-weight-bold   : 700 !default;
$font-weight-bolder : bolder !default;

$heading-scales:2,
1.6,
1.4,
1.2,
1.1,
1;
$headings-font-weight: 500;

$display-scales : 3,
2.75,
2.5,
2.25;
$displays-font-weight : 300;

// Spacings
$spaceamounts: (.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 7.5, 10); // Adjust this to include the rem amounts you need.
$sides       : (top, bottom, left, right); // Leave this variable alone

// Normalize
*,
*::before,
*::after {
  box-sizing: border-box;
}

a {
  display        : block;
  text-decoration: none;
}

ul,
li {
  list-style: none;
  margin    : 0;
  padding   : 0;

}

body {
  font-family: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', Oxygen, Ubuntu, Cantarell, 'Open Sans',
    'Helvetica Neue', sans-serif;
  @include fluid-type(1);
  -webkit-font-smoothing   : antialiased;
  -moz-osx-font-smoothing  : grayscale;
  color                    : $primary;
  background-color         : $bg-color;
  margin                   : 0;
  padding                  : 0;
  line-height              : 1.5;
  //word-wrap              : break-word;
  overflow-wrap            : break-word;
}

// Typography

@for $i from 1 through 6 {
  h#{$i} {
    font-weight: $headings-font-weight;
    margin     : 0 0 .5rem 0;
    @include fluid-type(nth($heading-scales, $i))
  }
}

@for $i from 1 through 4 {
  .display-#{$i} {
    font-weight: $displays-font-weight;
    @include fluid-type(nth($display-scales, $i))
  }
}

img,
svg {
  vertical-align: middle;
}

section {
  margin: 3rem 0;
}

p {
  margin: 0 0 1rem 0;
}

// Utility classes

.word-break-all {
  word-break: break-all;
}

.text-info {
  color: $blue;
}

.text-success {
  color: $green;
}

.text-warning {
  color: $orange;
}

.text-error {
  color: $red;
}

.text-center {
  text-align: center;
}

.cursor-pointer {
  cursor: pointer;
}

.text-bold {
  font-weight: $font-weight-bold;
}

.text-uppercase {
  text-transform: uppercase;
}